{"version":3,"sources":["components/EmployeesList.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeesList","this","props","items","map","item","empNo","firstName","lastName","React","Component","App","state","text","handleChange","bind","handleSubmit","fetchFromApi","url","console","log","fetch","then","res","json","setState","onSubmit","id","onChange","value","e","target","preventDefault","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAeeA,E,4JAXb,WACE,OACE,6BACGC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GAAI,OACxB,sCAA0BA,EAAKC,MAA/B,kBAAqDD,EAAKE,UAA1D,eAAiFF,EAAKG,WAA7EH,EAAKC,gB,GALIG,IAAMC,WCgEnBC,E,kDA/Db,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CAAET,MAAO,GAAIU,KAAM,IAChC,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJH,E,qDAOnB,WACEd,KAAKgB,iB,0BAGP,WAAe,IAAD,OACRC,EAAM,6BAENjB,KAAKW,MAAMC,OACbK,GAAO,SAAWjB,KAAKW,MAAMC,MAE/BM,QAAQC,IAAI,kBAAoBF,GAEhCG,MAAMH,GACHI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACF,EAAKC,UAAS,SAAAb,GAAK,MAAK,CACtBT,MAAOqB,EACPX,KAAM,Y,oBAKhB,WACE,OACE,gCACE,uDACA,uBAAMa,SAAUzB,KAAKe,aAArB,UACE,uBACEW,GAAG,WACHC,SAAU3B,KAAKa,aACfe,MAAO5B,KAAKW,MAAMC,OAEpB,+CAIF,cAAC,EAAD,CAAeV,MAAOF,KAAKW,MAAMT,a,0BAKvC,SAAa2B,GACX7B,KAAKwB,SAAS,CAAEZ,KAAMiB,EAAEC,OAAOF,U,0BAKjC,SAAaC,GACXA,EAAEE,iBAC6B,IAA3B/B,KAAKW,MAAMC,KAAKoB,QAGpBhC,KAAKgB,mB,GA5DSP,aCSHwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b8107d31.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass EmployeesList extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.items.map(item => (\n          <li key={item.empNo}>ID: {item.empNo} - First Name: {item.firstName} Last Name: {item.lastName}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EmployeesList","import React, { Component } from 'react';\nimport EmployeesList from './components/EmployeesList'\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = { items: [], text: '' };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount(){\n    this.fetchFromApi();\n  }\n\n  fetchFromApi(){\n    var url = 'http://localhost:8081/test';\n    \n    if (this.state.text)\n      url += '/user=' + this.state.text;\n    \n    console.log('Fetching from: ' + url);\n    \n    fetch(url)\n      .then(res => res.json())\n      .then(json => {\n          this.setState(state => ({\n            items: json,\n            text: ''\n        }))\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Search by first name:</h3>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            id=\"new-todo\"\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n          <button>\n            Search\n          </button>\n        </form>\n        <EmployeesList items={this.state.items} />\n      </div>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.text.length === 0) {\n      return;\n    }\n    this.fetchFromApi();\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}