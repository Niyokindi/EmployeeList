{"ast":null,"code":"var _jsxFileName = \"/Users/kenjiniyokindi/mon-app/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport EmployeesList from './EmployeesList';\nimport Button from './Button';\nimport Pagination from './Pagination';\nimport { fetchFromApi } from './Utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      text: '',\n      perPage: 5,\n      currentPage: 1\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchFromApi = fetchFromApi.bind(this);\n    this.handleItemsFetch = this.handleItemsFetch.bind(this);\n  }\n\n  componentDidMount() {\n    const firstNameData = this.props.location.state;\n\n    if (firstNameData) {\n      this.setState({\n        text: firstNameData\n      });\n    }\n  }\n\n  render() {\n    const indexOfLastEmployee = this.state.currentPage * this.state.perPage;\n    const indexOfFirstEmployee = indexOfLastEmployee - this.state.perPage;\n    ;\n    const currentEmployee = this.state.items.slice(indexOfFirstEmployee, indexOfLastEmployee);\n\n    const paginate = pageNumber => this.setState({\n      currentPage: pageNumber\n    });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Search by first name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange,\n          value: this.state.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Search\",\n          className: \"waves-effect waves-light btn-small\",\n          onClick: this.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EmployeesList, {\n        items: currentEmployee,\n        text: this.state.text,\n        onItemsFetch: this.handleItemsFetch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        postsPerPage: this.state.perPage,\n        totalPosts: this.state.items.length,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.text.length === 0) {\n      return;\n    }\n\n    this.fetchFromApi();\n  }\n\n  handleItemsFetch(newItems) {\n    this.setState({\n      items: newItems\n    });\n    console.log(\"handling items change\");\n    console.log(newItems);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/kenjiniyokindi/mon-app/src/components/Main.js"],"names":["React","Component","EmployeesList","Button","Pagination","fetchFromApi","Main","constructor","props","state","items","text","perPage","currentPage","handleChange","bind","handleSubmit","handleItemsFetch","componentDidMount","firstNameData","location","setState","render","indexOfLastEmployee","indexOfFirstEmployee","currentEmployee","slice","paginate","pageNumber","length","e","target","value","preventDefault","newItems","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport EmployeesList from './EmployeesList';\nimport Button from './Button';\nimport Pagination from './Pagination';\nimport {fetchFromApi} from './Utils';\n\nclass Main extends Component{\n    constructor(props){\n        super(props);\n        this.state = { items: [], text: '', perPage: 5, currentPage: 1};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.fetchFromApi = fetchFromApi.bind(this);\n        this.handleItemsFetch = this.handleItemsFetch.bind(this);\n      }\n      componentDidMount(){\n         const firstNameData = this.props.location.state;\n          if(firstNameData){\n              this.setState({text: firstNameData})\n          }\n      }\n\n    render(){\n        const indexOfLastEmployee = this.state.currentPage * this.state.perPage;\n        const indexOfFirstEmployee = indexOfLastEmployee - this.state.perPage;;\n        const currentEmployee= this.state.items.slice(indexOfFirstEmployee, indexOfLastEmployee);\n        const paginate = (pageNumber) => this.setState({currentPage:pageNumber})\n\n        return (\n            <div>\n                <h3>Search by first name:</h3>\n                <form className = \"input-form\">\n                <input\n                    onChange={this.handleChange}\n                    value={this.state.text}\n                />\n                <Button text = \"Search\" className=\"waves-effect waves-light btn-small\" onClick = {this.handleSubmit} />\n                </form>\n                \n                <EmployeesList items={currentEmployee} text = {this.state.text} onItemsFetch = {this.handleItemsFetch} /> \n                <Pagination postsPerPage = {this.state.perPage} totalPosts = {this.state.items.length} paginate = {paginate} />\n            </div>\n        )\n    }\n\n    handleChange(e) {\n        this.setState({ text: e.target.value });\n      }\n \n    handleSubmit(e) {\n        e.preventDefault();\n        if (this.state.text.length === 0) {\n          return;\n        }\n        this.fetchFromApi();\n    }\n    \n    handleItemsFetch(newItems){\n        this.setState({items: newItems });\n        console.log(\"handling items change\");\n        console.log(newItems);\n    }\n    \n}\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}