{"ast":null,"code":"var _jsxFileName = \"/Users/kenjiniyokindi/mon-app/src/components/EmployeeEdit.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport { fetchFromApi } from './Utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EmployeeEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      first_name: '',\n      last_name: ''\n    };\n    this.firstName = /*#__PURE__*/React.createRef();\n    this.lastName = /*#__PURE__*/React.createRef();\n    this.fetchFromApi = fetchFromApi.bind(this);\n  }\n\n  componentDidMount() {\n    this.getEmployeeDetails();\n  }\n\n  getEmployeeDetails() {\n    let employeeID = this.props.match.params.id;\n    axios.get(`http://localhost:8081/test/${employeeID}`).then(res => {\n      this.setState({\n        id: res.data.empNo,\n        first_name: res.data.firstName,\n        last_name: res.data.lastName\n      }, () => {\n        console.log(this.state);\n      });\n    });\n  }\n\n  EditEmployee(newEmployee) {\n    axios.request({\n      method: 'put',\n      url: `http://localhost:8081/test/update/${this.state.id}`,\n      data: newEmployee\n    }).then(res => {\n      const firstNameData = this.props.location.state;\n      alert(\"Employee editing completed sucessfully\");\n      console.log(firstNameData);\n      this.props.history.push({\n        pathname: '/',\n        state: firstNameData\n      });\n    }).catch(err => console.log(err));\n  }\n\n  onSubmit(e) {\n    const newEmployee = {\n      firstName: this.firstName.current.value,\n      lastName: this.lastName.current.value\n    };\n    this.EditEmployee(newEmployee);\n    e.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"input-form\",\n        onSubmit: this.onSubmit.bind(this),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-form\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"first_name\",\n            ref: this.firstName,\n            value: this.state.first_name,\n            onChange: this.handleInputChange.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-form\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"last_name\",\n            ref: this.lastName,\n            value: this.state.last_name,\n            onChange: this.handleInputChange.bind(this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"submit\",\n          className: \"waves-effect waves-light btn-small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n}\n\nexport default EmployeeEdit;","map":{"version":3,"sources":["/Users/kenjiniyokindi/mon-app/src/components/EmployeeEdit.js"],"names":["React","Component","axios","fetchFromApi","EmployeeEdit","constructor","props","state","id","first_name","last_name","firstName","createRef","lastName","bind","componentDidMount","getEmployeeDetails","employeeID","match","params","get","then","res","setState","data","empNo","console","log","EditEmployee","newEmployee","request","method","url","firstNameData","location","alert","history","push","pathname","catch","err","onSubmit","e","current","value","preventDefault","render","handleInputChange","target","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport {fetchFromApi} from './Utils'\nclass EmployeeEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { id: '', first_name: '' , last_name: ''};\n        this.firstName = React.createRef();\n        this.lastName = React.createRef();\n        this.fetchFromApi = fetchFromApi.bind(this)\n\n      }\n      componentDidMount(){\n         this.getEmployeeDetails();\n      }\n    getEmployeeDetails(){\n        let employeeID = this.props.match.params.id;\n        axios.get(`http://localhost:8081/test/${employeeID}`)\n        .then(res => {\n            this.setState({\n                id: res.data.empNo,\n                first_name: res.data.firstName,\n                last_name:  res.data.lastName\n            }, () => {\n                console.log(this.state);\n            });\n        })\n        \n      } \n    EditEmployee(newEmployee){\n        axios.request({\n            method: 'put',\n            url: `http://localhost:8081/test/update/${this.state.id}`,\n            data: newEmployee\n        }).then(res =>{\n            const firstNameData = this.props.location.state;\n            alert(\"Employee editing completed sucessfully\");\n            console.log(firstNameData);\n            this.props.history.push({pathname: '/', state: firstNameData});\n\n        }).catch(err => console.log(err));\n    } \n\n    onSubmit(e){\n        const newEmployee = {\n            firstName: this.firstName.current.value,\n            lastName: this.lastName.current.value\n        }\n        this.EditEmployee(newEmployee);\n        e.preventDefault();\n    }\n\n    render(){\n        return (\n            <div>\n                <h3>Edit Employee</h3>\n                \n                <form className = \"input-form\" onSubmit = {this.onSubmit.bind(this)} >\n                    <div className = \"input-form\" >\n                        <input type = \"text\" name = \"first_name\" ref = {this.firstName}  value = {this.state.first_name} onChange = {this.handleInputChange.bind(this)}/>\n                    </div>\n                    \n                    <br />\n\n                    <div className = \"input-form\" >\n                        <input type = \"text\" name = \"last_name\" ref = {this.lastName} value = {this.state.last_name} onChange = {this.handleInputChange.bind(this)} />\n                    </div>\n\n                    <br />\n\n                    <input type = \"submit\" value = \"submit\" className=\"waves-effect waves-light btn-small\"/>\n                    \n                 \n                </form>\n            </div>\n        )\n    }\n\n   handleInputChange(e){\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n        [name]:value\n    });\n   }\n}\n\nexport default EmployeeEdit\n\n"]},"metadata":{},"sourceType":"module"}